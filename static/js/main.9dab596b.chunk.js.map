{"version":3,"sources":["component/navbar.jsx","component/champion.jsx","component/TableauChampion.jsx","component/championInfo.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","className","to","Component","Champion","Url","props","champion","icon","id","name","hp","stats","mp","movespeed","armor","attackrange","hpregen","mpregen","handleSelection","console","log","this","src","alt","style","color","fontSize","textAlign","marginTop","tableauChampion","champions","require","map","key","championInfo","filter","c","match","params","class","width","height","title","marginLeft","App","Fragment","path","exact","component","Home","TableauChampion","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9dab596b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass NavBar extends Component {\n    state = {  }\n    render() { \n        return ( \n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark navbar-fixed-top\">\n            <h3>LOGO</h3>\n            <ul>\n                <Link to='/'>\n                    <li className=\"btn btn-outline-success\">Home</li>\n                </Link>\n                <Link to='/Champion'>\n                    <li className=\"btn btn-sm btn-outline-secondary\">Champion Pages</li>\n                </Link>\n                \n            </ul>\n        </nav>\n            );\n    }\n}\n\nexport default NavBar;","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Champion extends Component {\n    state = {\n        Url:this.props.champion.icon,\n        id:this.props.champion.name,\n        name:this.props.champion.name,\n        hp:this.props.champion.stats.hp,\n        mp:this.props.champion.stats.mp,\n        movespeed:this.props.champion.stats.movespeed,\n        armor:this.props.champion.stats.armor,\n        attackrange:this.props.champion.stats.attackrange,\n        hpregen:this.props.champion.stats.hpregen,\n        mpregen:this.props.champion.stats.mpregen,\n    };\n    handleSelection = id =>{\n        console.log(id,this)\n    }\n    \n    render() { \n        return ( \n        <div >\n            <Link to={'/Champion/' + this.state.id}>\n            <img src={this.state.Url} alt={this.state.name}/>\n            <h1 style={{color: 'white', fontSize:15, textAlign: 'center', marginTop: 10} }>{this.state.name}</h1>\n            </Link>\n        </div>\n        )\n    }\n}\n\nexport default Champion;","import Champion from './champion';\nimport React, { Component } from 'react';\nclass tableauChampion extends Component {\n    state = {\n        champions:require('./champ.json')\n    }\n    render() { \n        return (\n            <div style={{marginTop: 20}}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {this.state.champions.map(champion=>\n                            <Champion key={champion.id} champion={champion} />)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default tableauChampion;\n/*\n<nav className=\"navbar navbar-light bg-light navbar-fixed-top\" style = {{marginTop: 65}}>\n    <form className=\"form-inline\">\n        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n</nav>\n*/","import React, { Component } from 'react';\n\nclass championInfo extends Component {\n    constructor(props){\n        super (props);\n    this.state = {\n        champions:require('./champ.json').filter(c=> c.name ===this.props.match.params.id),\n        }   \n    }\n    render() { \n        return (  \n            <div className=\"container\" style={{marginTop: 20}}>\n                <div className=\"row\">\n                    <div className=\"col-2 ml-4\">\n                        <div class = \"card text-white bg-dark mb-3\" style={{width: 200}}>\n                            <img src={this.state.champions[0].icon} class=\"rounded mx-auto d-block\" alt= {this.state.champions[0].name} style={{marginTop: 40,width: 120, height: 120, }}/>\n                            <div class=\"card-body\">\n                                <h1 class=\"card-title\" style={{textAlign: 'center'}}>\n                                    {this.state.champions[0].name}\n                                    <h5>{this.state.champions[0].title}</h5>\n                                </h1>\n                            </div>\n                        </div>\n                        <div>\n                            \n                        </div>\n                    </div>\n                    <div className=\"col\" style={{marginLeft: 40}}>\n                        <main>\n                            \n                        </main>\n                    </div>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\nexport default championInfo;\n/*\n<div class=\"row row-cols-4\">\n                        <div class=\"col\">HP:{this.state.champions[0].stats.hp}</div>\n                        <div class=\"col\">HP PER LEVEL:{this.state.champions[0].stats.hpperlevel}</div>\n                        <div class=\"col\">Armor:{this.state.champions[0].stats.armor}</div>\n                        <div class=\"col\">movement speed:{this.state.champions[0].stats.movespeed}</div>\n                    </div>*/","import React from 'react';\nimport NavBar from './component/navbar'\nimport './App.css';\nimport TableauChampion from './component/TableauChampion';\nimport {BrowserRouter as Router, Switch,Route } from 'react-router-dom';\nimport championInfo from './component/championInfo'\n\n//document.body.style.backgroundColor = \"fcfcfc\";\n\nexport default function App() {\n  return (\n    <div>\n      <React.Fragment>\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/Champion/:id\" component={championInfo}/>\n            <Route path=\"/Champion\" exact component={TableauChampion}/>\n          </Switch>\n        </Router>\n    </React.Fragment>\n    </div>\n    \n  );\n}\nconst Home=()=>(\n  <div>\n    <h1>HOME PAGE</h1>\n  </div>\n)\n\n/*\nexport default function App() {\n  return (\n    <div className = \"container\">\n      <div className = \"row\">\n        <div className = \"col\">\n          \n        </div >\n        <div className = \"col-8\">\n          \n        </div >\n        <div className = \"col\">\n          \n        </div >\n      </div>\n      \n    </div>\n    \n  )\n}\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}